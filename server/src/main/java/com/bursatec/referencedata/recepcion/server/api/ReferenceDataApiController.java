package com.bursatec.referencedata.recepcion.server.api;

import java.util.ArrayList;
import java.util.List;

import com.bursatec.referencedata.recepcion.server.model.ReferenceData;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;

import org.apache.tomcat.util.buf.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.constraints.*;
import javax.validation.Valid;
import javax.servlet.http.HttpServletRequest;

@javax.annotation.Generated(
        value = "io.swagger.codegen.languages.SpringCodegen",
        date = "2018-06-21T18:22:12.534Z")

@Controller
public class ReferenceDataApiController implements ReferenceDataApi {

    private static final Logger log = LoggerFactory
            .getLogger(ReferenceDataApiController.class);

    private final ObjectMapper objectMapper;

    private final HttpServletRequest request;

    @org.springframework.beans.factory.annotation.Autowired
    public ReferenceDataApiController(ObjectMapper objectMapper,
            HttpServletRequest request) {
        this.objectMapper = objectMapper;
        this.request = request;
    }

    
    
    
    public ResponseEntity<Void> receiveHeartBeat(
            @NotNull @ApiParam(value = "The user name for login",
                    required = true) @Valid @RequestParam(value = "userid",
                            required = true) String userid,
            @NotNull @ApiParam(value = "The user name for login",
                    required = true) @Valid @RequestParam(value = "password",
                            required = true) String password,
            @NotNull @ApiParam(
                    value = "Last sequence generated by receive operation",
                    required = true) @Valid @RequestParam(value = "refDataId",
                            required = true) Long refDataId) {

        StringBuilder sb = new StringBuilder("receiveHeartBeat {");
        sb.append("userid: ").append(userid);
        sb.append(",password: ").append(password);
        sb.append(",refDataId: ").append(refDataId);
        sb.append("}");
        System.out.println(sb.toString());

        return new ResponseEntity<Void>(HttpStatus.OK);
    }

    
    
    
    
    
    public ResponseEntity<Void> receiveRefData(
            @NotNull @ApiParam(value = "The user name for login",
                    required = true) @Valid @RequestParam(value = "userid",
                            required = true) String userid,
            @NotNull @ApiParam(value = "The user name for login",
                    required = true) @Valid @RequestParam(value = "password",
                            required = true) String password,
            @ApiParam(value = "",
                    required = true) @Valid @RequestBody List<ReferenceData> referenceData) {

        List<String> data = new ArrayList<>();
        for (ReferenceData rd : referenceData) {
            data.add(rd.toString());
        }

        StringBuilder sb = new StringBuilder("receiveRefData {");
        sb.append("userid: ").append(userid);
        sb.append(",password: ").append(password);
        sb.append(StringUtils.join(data, ','));
        sb.append("}");
        System.out.println(sb.toString());

        return new ResponseEntity<Void>(HttpStatus.OK);
    }

}
